name: "Update detect-gpu benchmarks"
on:
  pull_request_target:
    types:
      - opened
      - synchronize

jobs:
  #update-detect-gpu-benchmarks:
  run-if:
    if: ${{github.event.pull_request.user.login == 'dependabot[bot]'}}
    # available scopes: https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    # required scopes for api endpoints: https://docs.github.com/en/rest/overview/permissions-required-for-github-apps?apiVersion=2022-11-28
    # afaik there's no list of required scopes for commands or a breakdown of what each scope entails
    # but api equivalent of "git commit" requires write permission for contents
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    name: Update benchmarks
    steps:
      - name: Create task
        id: task
        uses: opera-joakimd/linear-task-action-copy@main
        with:
          key: ${{secrets.LINEAR_API_KEY}}
          team_name: "action-test"
          pr_name: ${{github.event.pull_request.title}}

      - name: Setup git
        run: |
          git init
          git config --local user.name github-actions[bot]
          git config --local user.email github-actions[bot]@users.noreply.github.com
          git remote add origin "https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git"
          git fetch
          git checkout ${{github.head_ref}}

      # downloads and unzips new benchmarks, removes old ones, renames the new ones to the correct name
      - name: "Update benchmarks"
        shell: bash
        run: |
          cd public
          wget -c https://github.com/pmndrs/detect-gpu/raw/master/benchmarks.tar.gz -O - | tar -xz
          rm -r benchmarks
          mv benchmarks-min benchmarks

      # commit the changes from updating benchmarks then soft resets it and the previous commit
      # and commits them as 1 with the correctly prefixed message
      - name: Commit and squash
        continue-on-error: true
        run: |
          git add .
          git commit -m "temp"
          echo "::error::nothing to commit"
          git reset --soft $(git log -1 --format=format:%H)~2
          git commit -m "${{steps.task.outputs.task_id}}: Bump detect-gpu benchmarks"
          git push -f

      # https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#update-a-pull-request
      - name: Rename PR
        if: ${{!startsWith(github.event.pull_request.title, steps.task.outputs.task_id)}}
        run: |
          curl --request PATCH \
          --url https://api.github.com/repos/${{github.repository}}/pulls/${{github.event.pull_request.number}} \
          --header 'authorization: Bearer ${{secrets.GITHUB_TOKEN}}' \
          --header 'content-type: application/json' \
          --data '{"title": "${{steps.task.outputs.task_id}}: ${{github.event.pull_request.title}}"}'
